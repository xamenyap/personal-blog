[{"content":"We successfully created a blog in our local environment in the first part of this tutorial. Now it\u0026rsquo;s time to share it with the Internet. We will levarage Github pages as our hosting environment. Why? Because it\u0026rsquo;s free!\nGithub Setup I\u0026rsquo;m gonna assume that you already got a Github account, and also installed git in your local machine. You should create a new repository in your Github, name it personal-blog, or any fancy name that you want. For the remainder of this tutorial we will refer to it as personal-blog for the sake of simplicity. Remember to set your repository visibility as public because it\u0026rsquo;s required by Github (you can actually make it private if you\u0026rsquo;re willing to pay though).\nThe next thing you want to do is to push your local source code to the newly created github repository. You need to cd into your personal-blog folder, and then run these commands\n$ git init . $ git remote add origin git@github.com:{yourGithubName}/personal-blog.git $ git push -u origin master Replace {yourGithubName} with your chosen Github name when you created a new account. If you\u0026rsquo;re working on main branch, then replace master with main. For the remainder of this tutorial I\u0026rsquo;m gonna assume we stick with master as our primary branch.\nGithub Action Access your newly created repo in Github, you\u0026rsquo;ll see the codes being pushed to master branch. Now we\u0026rsquo;re gonna add a Github action hook so that every time we push new stuff to this master branch, Github will help us build and deploy our blog. Create a new file under personal-blog/.github/workflows/gh-pages.yml and fill it with this content\nname: github pages on: push: branches: - master # Set a branch to deploy pull_request: jobs: deploy: runs-on: ubuntu-20.04 steps: - uses: actions/checkout@v2 with: submodules: true # Fetch Hugo themes (true OR recursive) fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: \u0026#39;latest\u0026#39; # extended: true - name: Build run: hugo --minify - name: Deploy uses: peaceiris/actions-gh-pages@v3 if: github.ref == \u0026#39;refs/heads/master\u0026#39; with: github_token: ${{ secrets.GITHUB_TOKEN }} publish_dir: ./public Note that the target branch is specified as master here. This action hook will build your blog every time your master branch is updated, and the built artifacts will be deployed on another branch called gh-pages. Commit this action hook to your repository by running these commands\n$ git add . $ git commit -m \u0026#34;Add gh-pages action hook\u0026#34; $ git push -u origin master Github Pages Now you should access your Github repository, go to Settings, and then Pages. You should see something like this Under Source you need to select branch gh-pages, and select folder root, and then finally click Save. Wait for a few seconds, and you should see this Config Update Your blog can now be accessed by netizens via the link in the blue box! Note that in your case the Github name should not be xamenyap (unless you\u0026rsquo;re my doppelganger), and your repository is probably not sunken-eyes. If you follow this tutorial strictly then the URL for your blog post will be https://{yourGithubName}.github.io/personal-blog with {yourGithubName} being whatever you used during the registration process.\nWhat you need to do next is to update your blog base url in configuration file config.toml\nbaseURL = https://{yourGithubName}.github.io/personal-blog And then you will need to commit this change, and push it to master branch\n$ git add . $ git commit -m \u0026#34;Update baseURL in config file\u0026#34; $ git push -u origin master Wait a few minutes for Github action to work its magic, and then access the awesome blog you just created via https://{yourGithubName}.github.io/personal-blog :) In the next post we will deploy our blog using our chosen domain, but still hosting on Github.\n","permalink":"https://sunkeneyes.dev/posts/hello-world-part-2/","summary":"We successfully created a blog in our local environment in the first part of this tutorial. Now it\u0026rsquo;s time to share it with the Internet. We will levarage Github pages as our hosting environment. Why? Because it\u0026rsquo;s free!\nGithub Setup I\u0026rsquo;m gonna assume that you already got a Github account, and also installed git in your local machine. You should create a new repository in your Github, name it personal-blog, or any fancy name that you want.","title":"Hello World Part 2"},{"content":"As I\u0026rsquo;m getting older it\u0026rsquo;s harder for me to remember things while I realize there are more things I need to learn. Improving my memory is important. Jotting things down so that I can revise later is also a good alternative.\nGo is a powerful programming language, and has been my \u0026ldquo;main\u0026rdquo; programming language for a few years by the time this post is being written. I\u0026rsquo;m excited to learn Hugo, and hopefully I can create something fun with it. In this post I am sharing a basic tutorial of creating a blog using Hugo, and deploy it to a github page. This is what I achieved in a 2-hour session (yeah, I know, you can probably finish this in less than 2 hours, I\u0026rsquo;m getting old and slow!) of reading Hugo documents and repeating trial-and-error.\nHugo Installation The first thing to do, is to install Hugo. I\u0026rsquo;m gonna assume that you\u0026rsquo;re using a Mac, and have already installed brew. Run this command in your terminal of choice.\n$ brew install hugo Verify hugo version by running hugo version in your terminal. At the moment of writting this post, I\u0026rsquo;m using v0.101.0+extended.\nNow you can run this command to initiate a new hugo site repository in your current directory\n$ hugo new site personal-blog This command will create a new folder personal-blog in your current directory. Note that personal-blog will be the folder to host all the necessary assets of the site. You are free to use another name as you see fit. For the remaining of this tutorial I will keep refering to the site we\u0026rsquo;re working on as personal-blog, but you should know what I\u0026rsquo;m talking about.\nHugo Theme The next thing we\u0026rsquo;re gonna do is to install another theme. The theme I\u0026rsquo;m choosing for this tutorial is PaperMod. To do this, firstly you need to cd into personal-blog and init a new git repository, and then finally add a git submodule of the new theme. All these steps are illustrated in the following commands\n$ cd personal-blog $ git init $ git submodule add --depth=1 https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod You should probably see a bunch of new files added to folder personal-blog. Next, you should open your config file located at personal-blog/config.toml and add a new line to specify the theme\ntheme = \u0026#34;PaperMod\u0026#34; The First Post Our new blog is almost ready now! We\u0026rsquo;re gonna add a sample post to our blog. As a tradition, we\u0026rsquo;re gonna add a Hello World blog post. The command for this is as followed\n$ hugo new posts/hello-world.md You should realize that a new file created at personal-blog/content/posts/hello-world.md. This is the content file for our first blog post. Go ahead and open it in your favorite text editor, you will see something like this\n--- title: \u0026#34;Hello World\u0026#34; date: 2022-07-17T15:14:05+07:00 draft: true --- You can update the file content to add a simple Hello World message to your audience like this\n--- title: \u0026#34;Hello World\u0026#34; date: 2022-07-17T15:14:05+07:00 draft: true --- Hello World Note that the draft status is set to true, which means it won\u0026rsquo;t be visible by default. However, this is good enough to showcase our blog in the local environment.\nLocal Deployment Hugo local deployment can simply be done by running the following command\n$ hugo server -D The -D parameter means we\u0026rsquo;re publishing our drafts as well as the finished posts. You should see some build logs in your terminal that includes a URL to your local blog. For me, it\u0026rsquo;s http://localhost:1313/personal-blog/. Open your favorite browser and access the link, you should be greeted with your new blog! It\u0026rsquo;s really nice of Hugo to provide us live reload out of the box, which means you can change your first post content, and Hugo will rebuild the blog automatically. Go ahead and try changing Hello World into something else and see for yourself.\nWe have just finished setting up our new blog in our local machine, it\u0026rsquo;s time we take a step further: deploying our blog to the internet so that we can share with other people. This tutorial is quite long already, so let\u0026rsquo;s continue in another blog post!\n","permalink":"https://sunkeneyes.dev/posts/hello-world/","summary":"As I\u0026rsquo;m getting older it\u0026rsquo;s harder for me to remember things while I realize there are more things I need to learn. Improving my memory is important. Jotting things down so that I can revise later is also a good alternative.\nGo is a powerful programming language, and has been my \u0026ldquo;main\u0026rdquo; programming language for a few years by the time this post is being written. I\u0026rsquo;m excited to learn Hugo, and hopefully I can create something fun with it.","title":"Hello World"}]